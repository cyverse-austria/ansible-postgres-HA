---
- name: Load OS-specific variables
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "../vars/{{ ansible_distribution_release }}.yml"
    - "../vars/empty.yml"
  tags: [always]

# maf
- name: update apt-cache
  ansible.builtin.apt:
    # name: "*"
    # state: latest
    update_cache: true

- name: install some python stuff
  ansible.builtin.apt:
    name:
      - python3-pip
      - libpq-dev
      - python3-psycopg2
  when: repmgr_node_id == 1

# - name: install python module
#   ansible.builtin.pip:
#     name:
#       - psycopg2
#   when: repmgr_node_id == 1
# maf
#
# Override defaults/main.yml with PostgreSQL version specific values
#
- name: Load PG version specific variables
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "../vars/postgresql_{{ postgresql_version }}.yml"
    - "../vars/empty.yml"
  tags: [always]

- name: Install PostgreSQL with apt
  ansible.builtin.import_tasks: install_apt.yml
  when: ansible_pkg_mgr == "apt"
  tags: [postgresql, postgresql-install]

- name: Install PostgreSQL extensions
  ansible.builtin.import_tasks: extensions.yml
  tags: [postgresql, postgresql-extensions]

- name: Detect Repmgr primary
  ansible.builtin.import_tasks: extensions/detect_repmgr_primary.yml
  when: postgresql_ext_install_repmgr and ansible_service_mgr == 'systemd'
  tags: [postgresql, postgresql-extensions]

- name: Install Foreign Data Wrappers
  ansible.builtin.import_tasks: fdw.yml
  tags: [postgresql, postgresql-fdw]

- name: Configure PostgreSQL
  ansible.builtin.import_tasks: configure.yml
  tags: [postgresql, postgresql-configure]

- name: Create PostgreSQL users
  ansible.builtin.import_tasks: users.yml
  tags: [postgresql, postgresql-users]

- name: Create PostgreSQL databases
  ansible.builtin.import_tasks: databases.yml
  tags: [postgresql, postgresql-databases]

- name: Create PostgreSQL schemass
  ansible.builtin.import_tasks: schemas.yml
  tags: [postgresql, postgresql-schemas]

- name: Configure PostgreSQL users privileges
  ansible.builtin.import_tasks: users_privileges.yml
  tags: [postgresql, postgresql-users]

- name: Configure Repmgr
  ansible.builtin.import_tasks: extensions/configure_repmgr.yml
  when: postgresql_ext_install_repmgr and ansible_service_mgr == 'systemd'
  tags: [postgresql, postgresql-extensions]

- name: Check PostgreSQL version mismatch
  ansible.builtin.import_tasks: check_pg_version_mismatch.yml
  tags: [postgresql, postgresql-version-mismatch]
